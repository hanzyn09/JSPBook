
스크립트 태그

JSP 페이지"가 서블릿 프로그램"에서 서블릿 클래스"로 변환할 때
JSP 컨테이너가 자바코드가 삽입되어있는 스크립트 태그를 처리하고 나머지는 HTML 코드나 일반 텍스트로 간주
1. 선언문 	<%! %> : 자바 변수나 메서드를 정의
2. 스크립틀릿  <% %> : 자바 로직 코드 작성
3. 표현문 	<%= %> : 변수, 계산식, 메서드 호출 결과를 문자열 형태로 출력, 세미콜론 사용 금지
					(_jspService() 메서드 내부의 out.print() 메서드의 매개변수로써 문자열 형태가 출력되기 떄문)
					
==

	선언문 태그 <%! 자바코드; %>
	
	변수나 메서드"를 선언하는 태그
	선언문 태그에 선언된 변수와 메서드는 서블릿 프로그램으로 번역될 때
	_jspService() 메서드 외부"에 배치되므로 JSP 페이지 임의의 위치에서 선언 할 수 있다.
	심지어 스크립틀릿태그보다 나중에 선언해도 스크립틀릿 태그에서 사용할 수 있다.
	
	선언문태그로 선언된 변수는 서블릿 프로그램으로 번역될 때 클래스 수준의 멤버변수가 되므로 전역변수로 사용된다.
	선언문태그로 선언된 메서드는 전역 변수 처럼 전역 메서드로 사용된다.
	
	==
	
	스크립틀릿 태그 <% 자바코드; %>
	
	자바코드로 이루어진 로직 부분 포함
	out 객체를 사용하지 않고도 쉽게 HTML 응답을 만들어낸다. (메서드 없이 변수만을 선언할 수 있다
	
	스크립틀릿 태그는 가장 일반적으로 사용되며 변수, 메서드 선언, 유효식을 포함할 수 있다.
	모든 텍스트, HTML 태그, JSP 요소는 스크립틀릿 태그 외부에 있어야한다.
	
	스크립틀릿 태그에 작성된 자바코드는 서블릿 프로그램으로 변환 될 때 _jspService() 메서드 내부에 복사된다.
	각 클라이언트의 요청에 대해 _jspServicer() 메서드가 호출되므로 이 메서드의 내부코드가 클라이언트의 요청마다 실행되어야한다.
	그리고 _jspService() 메서드 내부에 복사되므로 
	지역변수가 되어 이 태그에 선언된 변수는 스크립틀릿 태그 내에서만 사용할 수 있다.
	
	==
	
	표현문 태그 <%= 자바코드 %>
	
	웹브라우저에 출력할 부분을 표현한다.
	표현문 태그를 이용하여 선언문/스크립틀릿 태그에서 선언된 변수나 메서드의 반환 값을 외부로 출력한다.
	표현문 태그는 스크립틀릿태그에서 사용할 수 없으므로 out.print() 메서드를 이용한다.
	표현문 태그에 숫자, 문자, 불린 등 기본 자료형과 자바 객체 타입도 사용할 수 있다.
	표현문 태그에 작성된 모든 자바 코드의 값은 문자열로 변환되어 웹 브라우저에 출력된다.
	 기본 데이터 타입은 toString()을 통해 출력,
	 자바 객체 타입은 java.lang.Object 클래스의 toString() 메서드를 사용하거나 자체선언한 toString()을 사용하여 출력된다.
	 
==
	